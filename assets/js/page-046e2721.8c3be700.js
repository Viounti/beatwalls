(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{371:function(e,t,s){"use strict";s.r(t);var a=s(18),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"properties-and-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#properties-and-functions"}},[e._v("#")]),e._v(" Properties and Functions")]),e._v(" "),s("p",[e._v("Before we dive in, have some glossary\nThe line "),s("code",[e._v("height = 2")]),e._v(" consists of 2 elements.")]),e._v(" "),s("ul",[s("li",[e._v("Property: "),s("code",[e._v("height")])]),e._v(" "),s("li",[e._v("Expressions: "),s("code",[e._v("2")])])]),e._v(" "),s("p",[e._v("This line tells the program that the height of all walls should be changed to 2.\nOften however more flexibility is needed.")]),e._v(" "),s("p",[e._v("It internally uses "),s("a",{attrs:{href:"http://mathparser.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("Math parser"),s("OutboundLink")],1),e._v(" so you can use everything there that is handled with Expressions.\nHere are some things that stood out useful or have something special to them.")]),e._v(" "),s("h2",{attrs:{id:"math-expressions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math-expressions"}},[e._v("#")]),e._v(" Math Expressions")]),e._v(" "),s("p",[e._v("Beatwalls supports math expressions.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("# Creates a wall thats 50 units high\n10 wall\n    height = 2 + 3 * 4 ^ 5\n    height += 2\n    height *= 3\n    height ^= 4\n")])])]),s("h2",{attrs:{id:"functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),s("p",[e._v("Functions in Beatwalls take some numbers as input and return one.\nThey can and should not assign properties.")]),e._v(" "),s("p",[e._v("Beatwalls features "),s("a",{attrs:{href:"http://mathparser.org/api/org/mariuszgromada/math/mxparser/mathcollection/MathFunctions.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("build-in"),s("OutboundLink")],1),e._v("\nfunctions for more advanced use cases.")]),e._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("i is a double of 0..1 and tells how many of the walls have been affected.\nWhen you have a wallstructure with 4 beats, i will be 0 on the first wall, 0.25 on the second, etc...")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("10 line\n    p1 = 10,0\n    p2 = 4,0,2\n    width = abs(-2)         # -> 2\n    height = round(i,1)+1   # -> 1 for the first half, 2 for the second\n")])])]),s("p",[e._v("They have also been enhanced by some functions I found lacking.")]),e._v(" "),s("ul",[s("li",[e._v("all easing methods "),s("a",{attrs:{href:"https://easings.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),s("OutboundLink")],1)]),e._v(" "),s("li",[e._v("random Functions")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("10 wall\n    height = easeInSin(0,20)\n    height += random(-2,2)\n")])])]),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("Not all properties that are used to "),s("strong",[e._v("create")]),e._v(" wallstructures do not have access to easing functions.\nYou can only use easing functions on properties that are used to "),s("strong",[e._v("change")]),e._v(" existing wallstructures.")])]),e._v(" "),s("h2",{attrs:{id:"user-defined-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#user-defined-functions"}},[e._v("#")]),e._v(" User-defined Functions")]),e._v(" "),s("p",[e._v("User-defined functions can be created with the keyword "),s("code",[e._v("fun")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("fun myFunction(x,y) = sin(x) + 2 * y\n10 wall\n    height = myFunction(1,2) # we will talk about i later\n")])])]),s("h2",{attrs:{id:"constants"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constants"}},[e._v("#")]),e._v(" Constants")]),e._v(" "),s("p",[e._v("all build-in Constants can be found in "),s("a",{attrs:{href:"https://mathparser.org/mxparser-tutorial/build-in-constants",target:"_blank",rel:"noopener noreferrer"}},[e._v("this list"),s("OutboundLink")],1),e._v(" e.g. "),s("code",[e._v("pi")])]),e._v(" "),s("h2",{attrs:{id:"user-defined-constants"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#user-defined-constants"}},[e._v("#")]),e._v(" User-defined Constants")]),e._v(" "),s("p",[e._v("User-defined constants can be created with the keyword "),s("code",[e._v("const")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("const offset = 20\n10 wall\n    height = offset + 10\n")])])]),s("h2",{attrs:{id:"beatwalls-specific-elements"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#beatwalls-specific-elements"}},[e._v("#")]),e._v(" Beatwalls specific Elements")]),e._v(" "),s("p",[e._v("Properties are visible to each other, so you can reference them.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("10 wall\n    height = width * 2\n")])])]),s("p",[e._v("There are also some predefined variables to use.")]),e._v(" "),s("ul",[s("li",[e._v("references the current wall Properties"),s("code",[e._v("wall{x/y/z/width/height/duration}")])]),e._v(" "),s("li",[s("code",[e._v("i")]),e._v(" -> 0 - 1 on the proggress of how many walls have been created.")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("10 wall\n    height = sin(i*pi)\n")])])]),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),s("p",[e._v("Be cautions with "),s("code",[e._v("i")]),e._v(" and "),s("code",[e._v("wall{x/y/z/width/height/duration}")]),e._v(".\nAgain, not all properties that are used to "),s("strong",[e._v("create")]),e._v(" wallstructures do not have access to easing functions.\nYou can only use easing functions on properties that are used to "),s("strong",[e._v("change")]),e._v(" existing wallstructures.")])])])}),[],!1,null,null,null);t.default=n.exports}}]);