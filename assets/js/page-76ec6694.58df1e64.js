(window.webpackJsonp=window.webpackJsonp||[]).push([[233],{692:function(e,t,r){"use strict";r.r(t);var o=r(33),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[r("RouterLink",{attrs:{to:"/"}},[e._v("beatwalls")]),e._v(" / "),r("RouterLink",{attrs:{to:"/reference/"}},[e._v("structure")])],1),e._v(" "),r("h2",{attrs:{id:"package-structure"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#package-structure"}},[e._v("#")]),e._v(" Package structure")]),e._v(" "),r("h3",{attrs:{id:"types"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#types"}},[e._v("#")]),e._v(" Types")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Summary")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-continues-curve/"}},[e._v("ContinuesCurve")])],1),e._v(" "),r("td",[e._v("Creates a continues line with up to 31 Points. has a typo and will be deleted on version 1.0"),r("code",[e._v("class ~~ContinuesCurve~~ :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-continuous-curve/"}},[e._v("ContinuousCurve")])],1),e._v(" "),r("td",[e._v("Creates a continues line with up to 31 Points. this one does not have a typo in the name ðŸ˜ƒ"),r("code",[e._v("class ContinuousCurve :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-curve/"}},[e._v("Curve")])],1),e._v(" "),r("td",[e._v("Draw a curve of Walls. This uses BezierCurve. You can imagine it like a line between point 1 and point 4, that gets pulled upon by the controlpoints. Maybe this link can help (the dots are the Points) https://www.desmos.com/calculator/cahqdxeshd"),r("code",[e._v("class Curve :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-define/"}},[e._v("Define")])],1),e._v(" "),r("td",[e._v("Define your own WallStructure from existing WallStructures."),r("code",[e._v("class Define :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-empty-wall-structure/"}},[e._v("EmptyWallStructure")])],1),e._v(" "),r("td",[e._v("dont touch"),r("code",[e._v("object EmptyWallStructure :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-furry-grid/"}},[e._v("FurryGrid")])],1),e._v(" "),r("td",[e._v("3d Grid"),r("code",[e._v("class FurryGrid :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-helix/"}},[e._v("Helix")])],1),e._v(" "),r("td",[e._v("spinning time! make walls spin around the player"),r("code",[e._v("class Helix :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-helix-curve/"}},[e._v("HelixCurve")])],1),e._v(" "),r("td",[e._v("NOT IMPLEMENTED YET"),r("code",[e._v("class HelixCurve :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-line/"}},[e._v("Line")])],1),e._v(" "),r("td",[e._v("Draws a wall of line between the 2 provided Points"),r("code",[e._v("class Line :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-loop/"}},[e._v("Loop")])],1),e._v(" "),r("td",[e._v("NOT IMPLEMENTED YET loops throuh the given wallstructures and increments their values"),r("code",[e._v("class Loop :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-noodle-helix/"}},[e._v("NoodleHelix")])],1),e._v(" "),r("td",[r("code",[e._v("class NoodleHelix :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-random-blocks/"}},[e._v("RandomBlocks")])],1),e._v(" "),r("td",[e._v("place random blocks around the player"),r("code",[e._v("class RandomBlocks :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-random-cuboid-lines/"}},[e._v("RandomCuboidLines")])],1),e._v(" "),r("td",[e._v("draws multiple lines around Sections of the cuboid."),r("code",[e._v("class RandomCuboidLines :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-random-curve/"}},[e._v("RandomCurve")])],1),e._v(" "),r("td",[e._v("random curves in a given cubic. Always starts at p1 and ends at p2."),r("code",[e._v("class RandomCurve :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-random-noise/"}},[e._v("RandomNoise")])],1),e._v(" "),r("td",[e._v("Random Noise (small mini cubes)"),r("code",[e._v("class RandomNoise :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-random-structures/"}},[e._v("RandomStructures")])],1),e._v(" "),r("td",[e._v("Define your own WallStructure from existing WallStructures."),r("code",[e._v("class RandomStructures :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-steady-curve/"}},[e._v("SteadyCurve")])],1),e._v(" "),r("td",[e._v("Draw a steady curve of Walls. that is exactly 1 beat long"),r("code",[e._v("class SteadyCurve :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-wall/"}},[e._v("Wall")])],1),e._v(" "),r("td",[e._v("create a single Wall"),r("code",[e._v("class Wall :")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[e._v("WallStructure")])],1),e._v(" "),r("td",[r("code",[e._v("sealed class WallStructure : Serializable")])])])])]),e._v(" "),r("h3",{attrs:{id:"functions"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[e._v("#")]),e._v(" Functions")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Name")]),e._v(" "),r("th",[e._v("Summary")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/copy-walls.html"}},[e._v("copyWalls")])],1),e._v(" "),r("td",[r("code",[e._v("fun")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])]),r("code",[e._v(".copyWalls(): ArrayList<")]),r("RouterLink",{attrs:{to:"/structure.helper-classes/-spooky-wall/"}},[r("code",[e._v("SpookyWall")])]),r("code",[e._v(">")])],1)]),e._v(" "),r("tr",[r("td",[r("RouterLink",{attrs:{to:"/reference/deep-copy.html"}},[e._v("deepCopy")])],1),e._v(" "),r("td",[r("code",[e._v("fun")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])]),r("code",[e._v(".deepCopy():")]),r("RouterLink",{attrs:{to:"/reference/-wall-structure/"}},[r("code",[e._v("WallStructure")])])],1)])])])])}),[],!1,null,null,null);t.default=a.exports}}]);