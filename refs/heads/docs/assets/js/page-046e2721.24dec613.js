(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{365:function(t,e,s){"use strict";s.r(e);var a=s(33),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"assertions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#assertions"}},[t._v("#")]),t._v(" Assertions")]),t._v(" "),s("h2",{attrs:{id:"math-expressions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#math-expressions"}},[t._v("#")]),t._v(" Math Expressions")]),t._v(" "),s("p",[t._v("Beatwalls supports math expressions.\nIt internally uses "),s("a",{attrs:{href:"http://mathparser.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Math parser"),s("OutboundLink")],1),t._v(" so you can use everything described in Exrpressions there.\nHere are some examples.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# Creates a wall thats 50 units high\n10 wall\n    height = 2 + 3 * 4 ^ 5\n    height += 2\n    height *= 3\n    height ^= 4\n")])])]),s("h2",{attrs:{id:"functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),s("p",[t._v("Functions in Beatwalls take some numbers and return one.\nThey can and should not assign properties.")]),t._v(" "),s("p",[t._v("Beatwalls supports a bunch of functions to make your live easier in functions.\na list of can be "),s("a",{attrs:{href:"http://mathparser.org/api/org/mariuszgromada/math/mxparser/mathcollection/MathFunctions.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("i always returns a double of 0..1 based on the progress of the wallstructure")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("10 wall\n    height = round(i)\n")])])]),s("p",[t._v("It also has some all Easing functions, that can be found "),s("a",{attrs:{href:"https://easings.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("10 wall\n    height = easeInSin(0,20)\n")])])]),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Only Properties, that are used to "),s("strong",[t._v("change")]),t._v(" existing Wallstructures and not Properties that are used to "),s("strong",[t._v("create")]),t._v(" them have access to easing functions")])]),t._v(" "),s("h2",{attrs:{id:"user-defined-functions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#user-defined-functions"}},[t._v("#")]),t._v(" User-defined Functions")]),t._v(" "),s("p",[t._v("It is possible to create Functions yourself.\nYou cannot change a function after it has been created.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("fun myFunction(x,y) = sin(x) + 2 * y\n10 wall\n    height = myFunction(i,2)\n")])])]),s("h2",{attrs:{id:"constants"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#constants"}},[t._v("#")]),t._v(" Constants")]),t._v(" "),s("p",[t._v("It is possible to create Constants yourself.\nYou cannot change a Constant after it has been created.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const offset = 20\n10 wall\n    height = offset + 10\n")])])]),s("p",[t._v("Properties are also visible to each other, so you can reference them.")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("10 wall\n    height = width * 2\n")])])]),s("p",[t._v("There are also "),s("strong",[t._v("default")]),t._v(" variables you can use,\nfor example the previous talked about "),s("code",[t._v("i")]),t._v(".")]),t._v(" "),s("ul",[s("li",[t._v("all default Constants found in "),s("a",{attrs:{href:"https://mathparser.org/mxparser-tutorial/build-in-constants",target:"_blank",rel:"noopener noreferrer"}},[t._v("this list"),s("OutboundLink")],1),t._v(" e.g. "),s("code",[t._v("pi")])]),t._v(" "),s("li",[t._v("references the current wall Properties"),s("code",[t._v("wall{x/y/z/width/height/duration}")])]),t._v(" "),s("li",[s("code",[t._v("i")]),t._v(", 0 - 1 on the proggress of how many walls have been created.")])]),t._v(" "),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("Be cautions with "),s("code",[t._v("i")]),t._v(" and "),s("code",[t._v("wall{x/y/z/width/height/duration}")]),t._v(".\nOnly Properties, that are used to "),s("strong",[t._v("change")]),t._v(" existing Wallstructures and not Properties that are used to "),s("strong",[t._v("create")]),t._v(" them have access to them.\nTherefore, some functions like easing do not work on all properties.")])])])}),[],!1,null,null,null);e.default=n.exports}}]);